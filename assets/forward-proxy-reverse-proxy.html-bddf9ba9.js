import{_ as e,V as a,W as r,a0 as i}from"./framework-afccc25a.js";const l={},h=i('<h1 id="正向代理和反向代理" tabindex="-1"><a class="header-anchor" href="#正向代理和反向代理" aria-hidden="true">#</a> 正向代理和反向代理</h1><h2 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h2><h3 id="正向代理" tabindex="-1"><a class="header-anchor" href="#正向代理" aria-hidden="true">#</a> 正向代理</h3><ul><li>代理客户端，隐藏真实的客户，为客户端收发请求，使真实客户端对服务器不可见。</li><li>一个局域网内的所有用户可能被一台服务器做了正向代理，由该台服务器负责 HTTP 请求; 意味着同服务器做通信的是正向代理服务器。</li></ul><h3 id="反向代理" tabindex="-1"><a class="header-anchor" href="#反向代理" aria-hidden="true">#</a> 反向代理</h3><ul><li>代理服务器，隐藏了真实的服务器，为服务器收发请求，使真实服务器对客户端不可见。</li><li>负载均衡服务器，将用户的请求分发到空闲的服务器上;意味着用户和负载均衡服务器直接通信，即用户解析服务器域名时得到的是负载均衡服务器的 IP 。</li></ul><h2 id="共同点" tabindex="-1"><a class="header-anchor" href="#共同点" aria-hidden="true">#</a> 共同点</h2><ul><li>都是作为服务器和客户端的中间层。</li><li>都可以加强内网的安全性，阻止 web 攻击。</li><li>都可以做缓存机制，提高访问速度。</li></ul><h2 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h2><ul><li>正向代理其实是客户端的代理,反向代理则是服务器的代理。</li><li>正向代理中，服务器并不知道真正的客户端到底是谁；而在反向代理中，客户端也不知道真正的服务器是谁。</li><li>作用不同。正向代理主要是用来解决访问限制问题；而反向代理则是提供负载均衡、安全防护等作用。</li></ul>',10),d=[h];function t(n,c){return a(),r("div",null,d)}const o=e(l,[["render",t],["__file","forward-proxy-reverse-proxy.html.vue"]]);export{o as default};
