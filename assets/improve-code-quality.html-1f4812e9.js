const e=JSON.parse('{"key":"v-7f0b4cc9","path":"/design-model/improve-code-quality.html","title":"提高代码质量","lang":"en-US","frontmatter":{"title":"提高代码质量","order":4,"date":"2023-01-11T00:00:00.000Z","description":"提高代码质量的目的 高质量的代码，方便进行后续的一切操作; 方便他人阅读; 什么是代码质量 代码整洁; 结构规整，没有漫长的结构; 阅读起来好理解（命名规范）; 优化代码结构的设计模式 策略模式/状态模式; 目的：优化if-else分支; 应用场景：当代码if-else分支过多时; 区别：策略模式一般用于单线判断。状态模式一般用于多状态判断。; 外观模...","head":[["meta",{"property":"og:url","content":"https://xueyu-book.github.io/design-model/improve-code-quality.html"}],["meta",{"property":"og:title","content":"提高代码质量"}],["meta",{"property":"og:description","content":"提高代码质量的目的 高质量的代码，方便进行后续的一切操作; 方便他人阅读; 什么是代码质量 代码整洁; 结构规整，没有漫长的结构; 阅读起来好理解（命名规范）; 优化代码结构的设计模式 策略模式/状态模式; 目的：优化if-else分支; 应用场景：当代码if-else分支过多时; 区别：策略模式一般用于单线判断。状态模式一般用于多状态判断。; 外观模..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-01-11T10:20:58.000Z"}],["meta",{"property":"article:published_time","content":"2023-01-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-11T10:20:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"提高代码质量\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-11T00:00:00.000Z\\",\\"dateModified\\":\\"2023-01-11T10:20:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"提高代码质量的目的","slug":"提高代码质量的目的","link":"#提高代码质量的目的","children":[]},{"level":2,"title":"什么是代码质量","slug":"什么是代码质量","link":"#什么是代码质量","children":[]},{"level":2,"title":"优化代码结构的设计模式","slug":"优化代码结构的设计模式","link":"#优化代码结构的设计模式","children":[]},{"level":2,"title":"优化代码操作的设计模式","slug":"优化代码操作的设计模式","link":"#优化代码操作的设计模式","children":[]},{"level":2,"title":"基本结构示例","slug":"基本结构示例","link":"#基本结构示例","children":[{"level":3,"title":"策略模式的基本结构","slug":"策略模式的基本结构","link":"#策略模式的基本结构","children":[]},{"level":3,"title":"状态模式的基本结构","slug":"状态模式的基本结构","link":"#状态模式的基本结构","children":[]},{"level":3,"title":"外观模式的基本结构","slug":"外观模式的基本结构","link":"#外观模式的基本结构","children":[]},{"level":3,"title":"迭代器模式的基本结构","slug":"迭代器模式的基本结构","link":"#迭代器模式的基本结构","children":[]},{"level":3,"title":"备忘录模式的基本结构","slug":"备忘录模式的基本结构","link":"#备忘录模式的基本结构","children":[]},{"level":3,"title":"策略/状态模式的示例","slug":"策略-状态模式的示例","link":"#策略-状态模式的示例","children":[]},{"level":3,"title":"外观模式的示例","slug":"外观模式的示例","link":"#外观模式的示例","children":[]}]}],"git":{"createdTime":1673432458000,"updatedTime":1673432458000,"contributors":[{"name":"liaogengyu","email":"liaogengyu@xinli001.com","commits":1}]},"readingTime":{"minutes":3.05,"words":915},"filePathRelative":"design-model/improve-code-quality.md","localizedDate":"January 11, 2023","autoDesc":true}');export{e as data};
